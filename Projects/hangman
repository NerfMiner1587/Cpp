#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>
#include <algorithm>
using namespace std;
const int MAX_INCORRECT = 6;
char incorrect[MAX_INCORRECT];
int numIncorrect = 0;
int misses = 0;
void displayHangman() {
	cout << "\n";
	switch (misses) {
	case 0:
		cout << "    ______\n";
		cout << "      : \\|\n";
		cout << "         |\n";
		cout << "         |\n";
		cout << "         |\n";
		cout << "         |\n";
		cout << "_________|_\n";
		break;
	case 1:
		cout << "    ______\n";
		cout << "     :  \\|\n";
		cout << "     O   |\n";
		cout << "         |\n";
		cout << "         |\n";
		cout << "         |\n";
		cout << "_________|_\n";
		break;
	case 2:
		cout << "    ______\n";
		cout << "     :  \\|\n";
		cout << "     O   |\n";
		cout << "     |   |\n";
		cout << "         |\n";
		cout << "         |\n";
		cout << "_________|_\n";
		break;
	case 3:
		cout << "    ______\n";
		cout << "     :  \\|\n";
		cout << "     O   |\n";
		cout << "     |\\  |\n";
		cout << "         |\n";
		cout << "         |\n";
		cout << "_________|_\n";
		break;
	case 4:
		cout << "    ______\n";
		cout << "     :  \\|\n";
		cout << "     O   |\n";
		cout << "    /|\\  |\n";
		cout << "         |\n";
		cout << "         |\n";
		cout << "_________|_\n";
		break;
	case 5:
		cout << "    ______\n";
		cout << "     :  \\|\n";
		cout << "     O   |\n";
		cout << "    /|\\  |\n";
		cout << "      \\  |\n";
		cout << "         |\n";
		cout << "_________|_\n";
		break;
	case 6:
		cout << "    ______\n";
		cout << "     :  \\|\n";
		cout << "     O   |\n";
		cout << "    /|\\  |\n";
		cout << "    / \\  |\n";
		cout << "         |\n";
		cout << "_________|_\n";
		break;
	}
}
void display(string guessedWord) {
	cout << "\n Word: ";
	for (int i = 0; i < guessedWord.length(); i++) {
		cout << guessedWord[i] << ' ';
	}
	cout << "\n Incorrect guesses: ";
	for (int i = 0; i < 6; i++) {
		cout << incorrect[i] << ' ';
	}
	cout << "\n Misses left: " << MAX_INCORRECT - misses << "\n";
	displayHangman();
}
string processGuess(char guess, string word, string guessedWord) {
	bool isCorrect = false;
	for (int i = 0; i < word.length(); i++) {
		if (word[i] == guess && guessedWord[i] == '_') {
			guessedWord[i] = guess;
			isCorrect = true;
		}
	}
	if (!isCorrect) {
		bool alreadyGuessed = false;
		for (int i = 0; i < numIncorrect; i++) {
			if (incorrect[i] == guess) {
				alreadyGuessed = true;
				break;
			}
		}
		if (!alreadyGuessed) {
			incorrect[numIncorrect++] = guess;
			misses += 1;
		}
	}
	return guessedWord;
}
int main() {
	string wordList[] = {"pain", "exist", "thin", "parched", "telling", "deranged", "expensive", "waste", "harbor", "consist", "flash", "ask", "enlighten", "swear", "silly", "comment", "trail", "sabotage", "kindly", "hypnotize"};
	srand(time(0));
	string word = wordList[rand() % 5];
	string guessedWord(word.length(), '_');

	cout << "Welcome to Hangman!\n";

	// Game loop runs until the player runs out of guesses or guesses the word 
	while (misses < MAX_INCORRECT && guessedWord != word) {
		display(guessedWord); // Display the current state of the game
		cout << "Enter your guess: ";
		char guess;
		cin >> guess; // Get the player's guess
		string oldGuessedword = guessedWord; // Keep track of the word before the guess 
		guessedWord = processGuess(guess, word, guessedWord); // Process the guess
		if (guessedWord == oldGuessedword) {
			cout << "Oops! That letter isn't in there!\n"; // Inform the player the guess was wrong
		}
		else {
			cout << "Good guess!\n"; // Congratulate the player on a correct guess
		}
	} //end of game loop!
	if (guessedWord == word) {
		cout << "Congratulations! You guessed the word: " << word << "\n";
	}
	else {
		cout << "Game Over! The word was: " << word << "\n";
	}

	return 0;
}
